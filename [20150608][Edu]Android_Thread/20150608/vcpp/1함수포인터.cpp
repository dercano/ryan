
// 함수 포인터
#include <stdio.h>

// 함수의 리턴이 그 함수의 타입
// 함수의 프로토타입 또는 시그니처: 리턴타입(매개변수,...)
int func(int a) {
	printf("called func(%d)\n", a);
	return a;
}

int main()
{
	int n = 20;
	// 포인터 선언 방법: 타입과 변수명 사이에 *기호를 사용
	// 타입 * 변수명;
	// 타입* 변수명; -> 객체 지향 개발자(C++/ObjectC)
	// 타입 *변수명;	-> 절차 지향 개발자(C)
	int * p = &n;	// &연산자: 피연산자의 주소를 반환하는 연산자
	*p = 0;			// *연산자: 포인터의 주소를 사용하여 대상체로 이동


	// int a = func(20);
	// int * fp = &func;

	// 함수 포인터의 선언 방법: 리턴타입(*변수명)([매개변수,...]);
	int(*fp)(int);

	fp = func;	//  함수의 이름은 자신의 시작 주소로 암시적 변환이 됩니다.

	// 함수 포인터를 사용하여 함수를 호출하는 방법: 함수 호출 연산자(())를 사용
	fp(10);

	return 0;
}

